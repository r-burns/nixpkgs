{ stdenv, lib
, cmake
, fetchFromGitHub
, libcxx
, libcxxClang
, llvm
, makeWrapper
, ninja
, perl
}:
stdenv.mkDerivation rec {
  pname = "hipify";
  version = "4.0.0";

  src = fetchFromGitHub {
    owner = "ROCm-Developer-Tools";
    repo = pname;
    rev = "rocm-${version}";
    sha256 = "1b1vjjgwx9grv7nn3cf1q748mnp5dp3whjd8mk87090v5rij5py3";
  };

  postPatch = ''
    patchShebangs bin/hipify-perl

    substituteInPlace CMakeLists.txt \
      --replace 'set(CMAKE_C_COMPILER' '#' \
      --replace 'set(CMAKE_CXX_COMPILER' '#' \
  '';

  nativeBuildInputs = [
    cmake
    makeWrapper
    ninja
  ];
  buildInputs = [
    libcxxClang.cc
    llvm
    perl
  ];

  cmakeFlags = [
    "-DBIN_INSTALL_DIR=${placeholder "out"}/bin"
  ];

  postInstall = let
    /*
     * Since hipify-clang is a compiler frontend,
     * we need to add the cc-wrapper includes here.
     * For some reason, we need to reverse the order for
     * #include_next to work properly in system headers.
     */
    extraFlags = [
      "-I=${libcxxClang.libc_dev}/include"
      "-I=${libcxxClang}/resource-root/include"
      "-I=${libcxx}/include/c++/v1"
      "-I=${libcxx}/include"
    ];
  in ''
    wrapProgram $out/bin/hipify-clang \
      --add-flags '${lib.concatStringsSep " " extraFlags}'

    install -D $src/bin/hipify-perl $out/bin/hipify-perl
  '';

  meta = with lib; {
    description = "Converts CUDA to portable C++ code";
    longdescription = ''
      hipify-clang is a clang-based tool for translating CUDA sources into HIP
      sources. It translates CUDA source into an abstract syntax tree, which is
      traversed by transformation matchers. After applying all the matchers,
      the output HIP source is produced.

      hipify-perl is an autogenerated perl-based script which heavily uses
      regular expressions to translate CUDA sources into HIP sources.
    '';
    license = licenses.mit;
    platforms = platforms.linux;
    maintainers = with maintainers; [ r-burns ];
  };
}
